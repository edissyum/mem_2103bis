"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var AutodiscoverErrorCode_1 = require("../../Enumerations/AutodiscoverErrorCode");
var EwsLogging_1 = require("../../Core/EwsLogging");
var EwsUtilities_1 = require("../../Core/EwsUtilities");
var GetUserSettingsResponseCollection_1 = require("../Responses/GetUserSettingsResponseCollection");
var Promise_1 = require("../../Promise");
var ServiceValidationException_1 = require("../../Exceptions/ServiceValidationException");
var ExtensionMethods_1 = require("../../ExtensionMethods");
var Strings_1 = require("../../Strings");
var UserSettingName_1 = require("../../Enumerations/UserSettingName");
var XmlElementNames_1 = require("../../Core/XmlElementNames");
var XmlNamespace_1 = require("../../Enumerations/XmlNamespace");
var AutodiscoverRequest_1 = require("./AutodiscoverRequest");
/**
 * @internal Represents a GetUserSettings request.
 */
var GetUserSettingsRequest = /** @class */ (function (_super) {
    __extends(GetUserSettingsRequest, _super);
    function GetUserSettingsRequest(service, url, expectPartnerToken) {
        if (expectPartnerToken === void 0) { expectPartnerToken = false; }
        var _this = _super.call(this, service, url) || this;
        _this.expectPartnerToken = false;
        _this.expectPartnerToken = expectPartnerToken;
        // make an explicit https check.
        if (expectPartnerToken && !(url.Scheme.toLowerCase() === "https")) {
            throw new ServiceValidationException_1.ServiceValidationException(Strings_1.Strings.HttpsIsRequired);
        }
        return _this;
    }
    Object.defineProperty(GetUserSettingsRequest.prototype, "SmtpAddresses", {
        /** @internal Gets or sets the SMTP addresses. */
        get: function () {
            return this.smtpAddresses;
        },
        set: function (value) {
            this.smtpAddresses = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GetUserSettingsRequest.prototype, "Settings", {
        /** @internal Gets or sets the settings. */
        get: function () {
            return this.settings;
        },
        set: function (value) {
            this.settings = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GetUserSettingsRequest.prototype, "PartnerToken", {
        /**
         * @internal Gets the partner token.
         */
        get: function () {
            return this.partnerToken;
        },
        /** @private set */
        set: function (value) {
            this.partnerToken = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GetUserSettingsRequest.prototype, "PartnerTokenReference", {
        /**
         * @internal Gets the partner token reference.
         */
        get: function () {
            return this.partnerTokenReference;
        },
        /** @private set */
        set: function (value) {
            this.partnerTokenReference = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @internal Creates the service response.
     *
     * @return  {AutodiscoverResponse}      AutodiscoverResponse
     */
    GetUserSettingsRequest.prototype.CreateServiceResponse = function () {
        return new GetUserSettingsResponseCollection_1.GetUserSettingsResponseCollection();
    };
    /**
     * @internal Executes this instance.
     *
     * @return  {Promise<GetUserSettingsResponseCollection>}      [description]
     */
    GetUserSettingsRequest.prototype.Execute = function () {
        return __awaiter(this, void 0, Promise_1.Promise, function () {
            var responses;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.InternalExecute()];
                    case 1:
                        responses = _a.sent();
                        if (responses.ErrorCode == AutodiscoverErrorCode_1.AutodiscoverErrorCode.NoError) {
                            this.PostProcessResponses(responses);
                        }
                        return [2 /*return*/, responses];
                }
            });
        });
    };
    /**
     * Gets the name of the request XML element.
     *
     * @return  {string}      [description]
     */
    GetUserSettingsRequest.prototype.GetRequestXmlElementName = function () {
        return XmlElementNames_1.XmlElementNames.GetUserSettingsRequestMessage;
    };
    /**
     * @internal Gets the name of the response XML element.
     *
     * @return  {string}      [description]
     */
    GetUserSettingsRequest.prototype.GetResponseXmlElementName = function () {
        return XmlElementNames_1.XmlElementNames.GetUserSettingsResponseMessage;
    };
    /**
     * @internal Gets the WS-Addressing action name.
     *
     * @return  {string}      [description]
     */
    GetUserSettingsRequest.prototype.GetWsAddressingActionName = function () {
        return GetUserSettingsRequest.GetUserSettingsActionUri; // GetUserSettingsActionUri;
    };
    /**
     * Post-process responses to GetUserSettings.
     *
     * @param   {GetUserSettingsResponseCollection}   responses   The GetUserSettings responses.
     */
    GetUserSettingsRequest.prototype.PostProcessResponses = function (responses) {
        // Note:The response collection may not include all of the requested users if the request has been throttled.
        for (var index = 0; index < responses.Count; index++) {
            responses.Responses[index].SmtpAddress = this.SmtpAddresses[index];
        }
    };
    /**
     * @internal Read SOAP headers.
     *
     * @param   {object}   reader   EwsXmlReader
     */
    GetUserSettingsRequest.prototype.ReadSoapHeader = function (jsobject) {
        _super.prototype.ReadSoapHeader.call(this, jsobject);
        return;
        if (this.expectPartnerToken) {
            EwsLogging_1.EwsLogging.Assert(false, "GetUserSettingsRequest.ReadSoapHeader", "Partner tokens not implemented");
            // if (reader.IsElement(XmlNamespace.Autodiscover, XmlElementNames.PartnerToken)) {
            //   this.PartnerToken = reader.ReadInnerXml();
            // }
            // if (reader.IsElement(XmlNamespace.Autodiscover, XmlElementNames.PartnerTokenReference)) {
            //   this.PartnerTokenReference = reader.ReadInnerXml();
            // }
        }
    };
    /**
     * @internal Validates the request.
     */
    GetUserSettingsRequest.prototype.Validate = function () {
        _super.prototype.Validate.call(this);
        EwsUtilities_1.EwsUtilities.ValidateParam(this.SmtpAddresses, "smtpAddresses");
        EwsUtilities_1.EwsUtilities.ValidateParam(this.Settings, "settings");
        if (this.Settings.length == 0) {
            throw new ServiceValidationException_1.ServiceValidationException(Strings_1.Strings.InvalidAutodiscoverSettingsCount);
        }
        if (this.SmtpAddresses.length == 0) {
            throw new ServiceValidationException_1.ServiceValidationException(Strings_1.Strings.InvalidAutodiscoverSmtpAddressesCount);
        }
        for (var _i = 0, _a = this.SmtpAddresses; _i < _a.length; _i++) {
            var smtpAddress = _a[_i];
            if (ExtensionMethods_1.StringHelper.IsNullOrEmpty(smtpAddress)) {
                throw new ServiceValidationException_1.ServiceValidationException(Strings_1.Strings.InvalidAutodiscoverSmtpAddress);
            }
        }
    };
    /**
     * @internal Writes attributes to request XML.
     *
     * @param   {EwsServiceXmlWriter}   writer   The writer.
     */
    GetUserSettingsRequest.prototype.WriteAttributesToXml = function (writer) {
        writer.WriteAttributeValue("xmlns", EwsUtilities_1.EwsUtilities.AutodiscoverSoapNamespacePrefix, EwsUtilities_1.EwsUtilities.AutodiscoverSoapNamespace);
    };
    /**
     * @internal Writes elements to request XML.
     *
     * @param   {EwsServiceXmlWriter}   writer   The writer.
     */
    GetUserSettingsRequest.prototype.WriteElementsToXml = function (writer) {
        writer.WriteStartElement(XmlNamespace_1.XmlNamespace.Autodiscover, XmlElementNames_1.XmlElementNames.Request);
        writer.WriteStartElement(XmlNamespace_1.XmlNamespace.Autodiscover, XmlElementNames_1.XmlElementNames.Users);
        for (var s in this.SmtpAddresses) {
            var smtpAddress = this.SmtpAddresses[s];
            writer.WriteStartElement(XmlNamespace_1.XmlNamespace.Autodiscover, XmlElementNames_1.XmlElementNames.User);
            if (!ExtensionMethods_1.StringHelper.IsNullOrEmpty(smtpAddress)) {
                writer.WriteElementValue(XmlNamespace_1.XmlNamespace.Autodiscover, XmlElementNames_1.XmlElementNames.Mailbox, smtpAddress);
            }
            writer.WriteEndElement(); // User
        }
        writer.WriteEndElement(); // Users
        writer.WriteStartElement(XmlNamespace_1.XmlNamespace.Autodiscover, XmlElementNames_1.XmlElementNames.RequestedSettings);
        for (var s in this.Settings) {
            var setting = this.Settings[s];
            writer.WriteElementValue(XmlNamespace_1.XmlNamespace.Autodiscover, XmlElementNames_1.XmlElementNames.Setting, UserSettingName_1.UserSettingName[setting]);
        }
        writer.WriteEndElement(); // RequestedSettings
        writer.WriteEndElement(); // Request
    };
    /**
     * @internal Write extra headers.
     *
     * @param   {EwsServiceXmlWriter}   writer   The writer
     */
    GetUserSettingsRequest.prototype.WriteExtraCustomSoapHeadersToXml = function (writer) {
        if (this.expectPartnerToken) {
            EwsLogging_1.EwsLogging.Assert(false, "GetUserSettingsRequest.WriteExtraCustomSoapHeadersToXml", "Partner tokens not implemented");
            debugger;
            // writer.WriteElementValue(
            //    XmlNamespace.Autodiscover,
            //    XmlElementNames.BinarySecret,
            //    btoa(ExchangeServiceBase.SessionKey));
            //    //System.Convert.ToBase64String(ExchangeServiceBase.SessionKey));
        }
    };
    /**
     * Action Uri of Autodiscover.GetUserSettings method.
     */
    GetUserSettingsRequest.GetUserSettingsActionUri = EwsUtilities_1.EwsUtilities.AutodiscoverSoapNamespace + "/Autodiscover/GetUserSettings";
    return GetUserSettingsRequest;
}(AutodiscoverRequest_1.AutodiscoverRequest));
exports.GetUserSettingsRequest = GetUserSettingsRequest;
//# sourceMappingURL=GetUserSettingsRequest.js.map